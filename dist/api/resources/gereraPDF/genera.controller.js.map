{"version":3,"sources":["../../../../src/api/resources/gereraPDF/genera.controller.js"],"names":["getMateriales","req","res","tipo","params","console","log","Material","find","populate","exec","err","materiales","datos","push","text","bold","fontSize","map","d","image","img","width","height","title","cantidad","lugar","nombre","pdfDoc","require","create","end","pipe","Lugar","lugares","status","json","ok","mensaje","m","nombreMateriales","direccion","length"],"mappings":"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","file":"genera.controller.js","sourcesContent":["import Material from '../material/material.model';\r\nimport Lugar from '../lugar/lugar.model';\r\n/* jshint ignore:start */\r\n\r\nexport default {\r\n    getMateriales(req, res) {\r\n\r\n        const tipo = req.params.tipo;\r\n        // utilizar if para materiales y lugares\r\n\r\n        if (tipo === 'materiales') {\r\n            console.log('materiales');\r\n            Material.find({}).populate('lugar').exec((err, materiales) => {\r\n                // if (err) {\r\n                //     return res.status(400).json({\r\n                //         ok: false,\r\n                //         mensaje: 'Error generando el PDF'\r\n                //     });\r\n                // }\r\n\r\n                // console.log(materiales);\r\n\r\n                var datos = [];\r\n\r\n                // console.log('materiales en BD: ', materiales);\r\n                datos.push([\r\n                    { text: 'Imagen', bold: true, fontSize: 12 },\r\n                    { text: 'Nombre', bold: true, fontSize: 12 },\r\n                    { text: 'Cantidad', bold: true, fontSize: 12 },\r\n                    { text: 'Lugar', bold: true, fontSize: 12 }\r\n                ]);\r\n\r\n                // console.log('Arrglo de datos: ', datos);\r\n                // console.log(materiales);\r\n                materiales.map((d) => {\r\n                    // console.log('Map de materiales: ', d);\r\n                    // buscar coincidencias de id materiales en lugares-> materiales\r\n                    datos.push([\r\n                        { image: d.img ? `./uploads/materiales/${d.img}` : './assets/no-imagen.png', width: 50, height: 50 },\r\n                        { text: d.title },\r\n                        { text: d.cantidad },\r\n                        { text: d.lugar ? d.lugar.nombre : 'Sin asignar' }\r\n                        // { text: JSON.stringify(d.usuario) }\r\n                    ]);\r\n                });\r\n\r\n\r\n                // console.log('Los datos materiales: ', datos);\r\n\r\n\r\n                var pdfDoc = require('./genera.service').create(datos, tipo);\r\n                pdfDoc.end();\r\n                pdfDoc.pipe(res);\r\n                // pdfDoc.end();\r\n                // pdfDoc.pipe(res);\r\n                // res.status(200);\r\n                // return console.log(materiales);\r\n            });\r\n        } else if (tipo === 'lugares') {\r\n            console.log('lugares');\r\n            Lugar.find({}).populate('materiales').exec((err, lugares) => {\r\n                if (err) {\r\n                    return res.status(400).json({\r\n                        ok: false,\r\n                        mensaje: 'Error generando el PDF'\r\n                    });\r\n                }\r\n\r\n                var datos = [];\r\n\r\n                // console.log(lugares);\r\n                datos.push([{ text: 'Imagen', bold: true, fontSize: 12 },\r\n                    { text: 'Nombre', bold: true, fontSize: 12 },\r\n                    { text: 'Direcci贸n', bold: true, fontSize: 12 },\r\n                    { text: 'No. de materiales', bold: true, fontSize: 12 }\r\n                ]);\r\n\r\n                lugares.map((d) => {\r\n                    let materiales = d.materiales;\r\n                    materiales.map((m) => {\r\n                        let nombreMateriales = [];\r\n                        nombreMateriales.push(m.title);\r\n                        // console.log(nombreMateriales);\r\n                    });\r\n                    // console.log('materiales : ', materiales);\r\n                    // buscar coincidencias de id materiales en lugares-> materiales\r\n                    datos.push([{ image: d.img ? `./uploads/lugares/${d.img}` : './assets/no-imagen.png', width: 50, height: 50, },\r\n                        { text: d.nombre }, { text: d.direccion ? d.direccion : 'Sin direcci贸n' },\r\n                        {\r\n                            text: d.materiales ?\r\n                                materiales.length : 'No tiene materiales'\r\n                        }\r\n                        // { text: JSON.stringify(d.usuario) }\r\n                    ]);\r\n\r\n\r\n\r\n                });\r\n\r\n\r\n                // console.log('Los datos: lugares ', datos);\r\n\r\n\r\n                var pdfDoc = require('./genera.service').create(datos, tipo);\r\n                pdfDoc.end();\r\n                pdfDoc.pipe(res);\r\n\r\n                // return console.log(materiales);\r\n            });\r\n        } else {\r\n            // console.log('Colecci贸n incorrecta');\r\n            return res.status(400).json({ ok: false, mensaje: 'Colecci贸n incorrecta' });\r\n        }\r\n\r\n\r\n\r\n        // return res.status(200).json({ ok: true, mensaje: 'Generando pdf' });\r\n\r\n    }\r\n\r\n\r\n};"]}