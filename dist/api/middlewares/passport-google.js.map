{"version":3,"sources":["../../../src/api/middlewares/passport-google.js"],"names":["configureGoogleStrategy","passport","use","GoogleStrategy","OAuth2Strategy","clientID","devConfig","google","clientId","clientSecret","callbackURL","token","tokenSecret","profile","done","User","findOne","id","user","console","log","newUser","nombre","name","givenName","apellido","familyName","displayName","email","emails","value","save"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACO,IAAMA,4DAA0B,SAA1BA,uBAA0B,GAAM;;AAEzCC,mCAASC,GAAT,CAAa,IAAIC,8BAAeC,cAAnB,CAAkC;AACvCC,0CAAUC,uBAAUC,MAAV,CAAiBC,QADY;AAEvCC,8CAAcH,uBAAUC,MAAV,CAAiBE,YAFQ;AAGvCC,6CAAaJ,uBAAUC,MAAV,CAAiBG;AAHS,iBAAlC;AAAA,oHAKT,iBAAMC,KAAN,EAAaC,WAAb,EAA0BC,OAA1B,EAAmCC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uHAS2BC,kBAAKC,OAAL,CAAa,EAAE,aAAaH,QAAQI,EAAvB,EAAb,CAT3B;;AAAA;AAScC,oHATd;;AAAA,qHAWYA,IAXZ;AAAA;AAAA;AAAA;;AAYYC,wHAAQC,GAAR,CAAY,wBAAZ;AAZZ,iJAamBN,KAAK,IAAL,EAAWI,IAAX,CAbnB;;AAAA;AAgBcG,uHAhBd,GAgBwB,IAAIN,iBAAJ,CAAS,EAAT,CAhBxB;;;AAkBQM,wHAAQC,MAAR,GAAiBT,QAAQU,IAAR,CAAaC,SAA9B;AACAH,wHAAQI,QAAR,GAAmBZ,QAAQU,IAAR,CAAaG,UAAhC;AACAL,wHAAQd,MAAR,CAAeU,EAAf,GAAoBJ,QAAQI,EAA5B;AACAI,wHAAQd,MAAR,CAAeI,KAAf,GAAuBA,KAAvB;AACAU,wHAAQd,MAAR,CAAeoB,WAAf,GAA6Bd,QAAQc,WAArC;AACAN,wHAAQd,MAAR,CAAeqB,KAAf,GAAuBf,QAAQgB,MAAR,CAAe,CAAf,EAAkBC,KAAzC;;AAvBR;AAAA,uHAyBcT,QAAQU,IAAR,EAzBd;;AAAA;AAAA,iJA4BejB,KAAK,IAAL,EAAWO,OAAX,CA5Bf;;AAAA;AAAA;AAAA;;AA+BQF,wHAAQC,GAAR;AA/BR,iJAgCeN,iBAhCf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCALS;;AAAA;AAAA;AAAA;AAAA,oBAAb;AAyCH,CA3CM","file":"passport-google.js","sourcesContent":["import passport from 'passport';\r\nimport GoogleStrategy from 'passport-google-oauth';\r\nimport { devConfig } from '../resources/config/env/development';\r\nimport User from '../resources/usuario/usuario.model';\r\n\r\n// Use the GoogleStrategy within Passport.\r\n//   Strategies in passport require a `verify` function, which accept\r\n//   credentials (in this case, a token, tokenSecret, and Google profile), and\r\n//   invoke a callback with a user object.\r\n/* jshint ignore:start */\r\nexport const configureGoogleStrategy = () => {\r\n\r\n    passport.use(new GoogleStrategy.OAuth2Strategy({\r\n            clientID: devConfig.google.clientId,\r\n            clientSecret: devConfig.google.clientSecret,\r\n            callbackURL: devConfig.google.callbackURL\r\n        },\r\n        async(token, tokenSecret, profile, done) => {\r\n            try {\r\n                // console.log('Token', token);\r\n                // console.log('secretToken', tokenSecret);\r\n                // console.log('profile', profile);\r\n                // console.log('Nombre de user google: ', profile.name.givenName);\r\n                // console.log('Apellido de user google: ', profile.name.familyName);\r\n                // done(null, profile);\r\n\r\n                const user = await User.findOne({ 'google.id': profile.id });\r\n\r\n                if (user) {\r\n                    console.log('Este usuario ya existe');\r\n                    return done(null, user);\r\n                }\r\n\r\n                const newUser = new User({});\r\n\r\n                newUser.nombre = profile.name.givenName;\r\n                newUser.apellido = profile.name.familyName;\r\n                newUser.google.id = profile.id;\r\n                newUser.google.token = token;\r\n                newUser.google.displayName = profile.displayName;\r\n                newUser.google.email = profile.emails[0].value;\r\n\r\n                await newUser.save();\r\n\r\n\r\n                return done(null, newUser);\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n                return done(error);\r\n            }\r\n        }\r\n    ));\r\n}"]}