{"version":3,"sources":["../src/app.js"],"names":["express","require","fs","logger","app","PORT","use","bodyParser","urlencoded","extended","json","secret","devConfig","resave","saveUninitialized","passport","initialize","userProperty","session","serializeUser","user","done","id","deserializeUser","User","findById","err","restRouter","get","req","res","status","ok","mensaje","listen","console","log"],"mappings":";;AACA;;;;AAIA;;;;AAEA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;AACA;;;;AAhBA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;;AAEA,IAAIC,KAAKD,QAAQ,IAAR,CAAT;;AAEA,IAAME,SAASF,QAAQ,QAAR,CAAf;;;AAcA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAMG,MAAMJ,SAAZ;AACA,IAAMK,OAAO,IAAb;;AAEA;;AAEAD,IAAIE,GAAJ,CAAQH,OAAO,KAAP,CAAR;;AAEA,IAAMI,aAAaN,QAAQ,aAAR,CAAnB;;AAEA;AACAG,IAAIE,GAAJ,CAAQC,WAAWC,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;;AAEA;AACAL,IAAIE,GAAJ,CAAQC,WAAWG,IAAX,EAAR;;AAEAN,IAAIE,GAAJ,CAAQ,qBAAR;;AAEAF,IAAIE,GAAJ,CAAQ,8BAAQ;AACZK,YAAQC,uBAAUD,MADN;AAEZE,YAAQ,KAFI;AAGZC,uBAAmB;AAHP,CAAR,CAAR;;AAOAV,IAAIE,GAAJ,CAAQS,mBAASC,UAAT,CAAoB,EAAEC,cAAc,aAAhB,EAApB,CAAR;AACAb,IAAIE,GAAJ,CAAQS,mBAASG,OAAT,EAAR;AACA;AACA;AACA;;AAEA;AACA;AACAH,mBAASI,aAAT,CAAuB,UAACC,IAAD,EAAOC,IAAP,EAAgB;AACnCA,SAAK,IAAL,EAAWD,KAAKE,EAAhB;AACH,CAFD;;AAIA;AACAP,mBAASQ,eAAT,CAAyB,UAACD,EAAD,EAAKD,IAAL,EAAc;AACnCG,sBAAKC,QAAL,CAAcH,EAAd,EAAkB,UAACI,GAAD,EAAMN,IAAN,EAAe;AAC7BC,aAAK,IAAL,EAAWD,IAAX;AACH,KAFD;AAGH,CAJD;;AAMA;AACAhB,IAAIE,GAAJ,CAAQ,MAAR,EAAgBqB,qBAAhB;;AAKAvB,IAAIwB,GAAJ,CAAQ,GAAR,EAAa,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC5BA,QAAIC,MAAJ,CAAW,GAAX,EAAgBrB,IAAhB,CAAqB;AACjBsB,YAAI,IADa;AAEjBC,iBAAS;AAFQ,KAArB;AAIH,CALD;;AAOA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA7B,IAAI8B,MAAJ,CAAW7B,IAAX,EAAiB,YAAM;AACnB8B,YAAQC,GAAR,CAAY,cAAZ,EAA4B/B,IAA5B;AACH,CAFD","file":"app.js","sourcesContent":["const express = require('express');\r\nimport https from 'https';\r\nvar fs = require('fs');\r\n\r\nconst logger = require('morgan');\r\nimport cors from 'cors';\r\n\r\nimport passport from 'passport';\r\nimport session from 'express-session';\r\nimport { connect } from \"./api/resources/config/db\";\r\nimport { restRouter } from './api/resources';\r\nimport { configJWTStrategy } from './api/middlewares/passport-jwt';\r\nimport { configureGoogleStrategy } from './api/middlewares/passport-google';\r\nimport { devConfig } from './api/resources/config/env/development';\r\n\r\nimport User from './api/resources/usuario/usuario.model';\r\nimport { configureFacebookStrategy } from './api/middlewares/passport-facebook';\r\n\r\n// var options = {\r\n//     key: fs.readFileSync('keys/key.pem'),\r\n//     cert: fs.readFileSync('keys/cert.pem'),\r\n//     requestCert: false,\r\n//     rejectUnauthorized: false\r\n// };\r\n\r\n\r\nconst app = express();\r\nconst PORT = 3000;\r\n\r\nconnect();\r\n\r\napp.use(logger('dev'));\r\n\r\nconst bodyParser = require('body-parser');\r\n\r\n// parse application/x-www-form-urlencoded\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\n\r\n// parse application/json\r\napp.use(bodyParser.json());\r\n\r\napp.use(cors());\r\n\r\napp.use(session({\r\n    secret: devConfig.secret,\r\n    resave: false,\r\n    saveUninitialized: true\r\n}));\r\n\r\n\r\napp.use(passport.initialize({ userProperty: 'currentUser' }));\r\napp.use(passport.session());\r\nconfigJWTStrategy();\r\nconfigureGoogleStrategy();\r\nconfigureFacebookStrategy();\r\n\r\n// save user into session\r\n// req.session.user = {userId}\r\npassport.serializeUser((user, done) => {\r\n    done(null, user.id);\r\n});\r\n\r\n// extract the userId from session\r\npassport.deserializeUser((id, done) => {\r\n    User.findById(id, (err, user) => {\r\n        done(null, user);\r\n    });\r\n});\r\n\r\n// app.use(passport);\r\napp.use('/api', restRouter);\r\n\r\n\r\n\r\n\r\napp.get('/', function(req, res) {\r\n    res.status(200).json({\r\n        ok: true,\r\n        mensaje: 'Bienvenido !!'\r\n    });\r\n});\r\n\r\n// Cuando la autenticaciÃ³n falla redirecciona al login\r\n\r\n// app.get('failure', (req, res) => {\r\n//     return res.redirect('http://localhost:4200/login');\r\n// });\r\n\r\n// app.use((req, res, next) => {\r\n//     const error = new Error('No encontrado');\r\n//     error.message = 'Ruta incorrecta';\r\n//     error.status = 404;\r\n//     next(error);\r\n// });\r\n\r\n// app.use((error, req, res, next) => {\r\n//     res.status(error.status || 500);\r\n//     return res.json({\r\n//         error: {\r\n//             message: error.message,\r\n//         },\r\n//     });\r\n// });\r\n// var server = https.createServer(options, app);\r\n\r\napp.listen(PORT, () => {\r\n    console.log('Escuchando: ', PORT);\r\n});"]}